
$(document).ready(function(){

	//------------------------------------------------
	// Functions for work with forms and
	// doing ajax requests
	//================================================

	var default_username	= $('#inputName').val();

	var USERNAME_ERROR = 'Only letters are available! From 2 to 32 characters.\n',
		EMAIL_ERROR = 'Enter your email in the correct format!\n',
		PASSWORD_ERROR = 'Minimum password length 8 characters, maximum - 64!\n',
		PASS_COMP_ERROR = 'Passwords don\'t coincide!\n';
	var error;

	function validUsername(username) {
		if (username.search(/^[a-zA-Zа-яА-Я]/g) == -1 || username.length > 32 || username.length < 2)
			error = USERNAME_ERROR;
	}

	function validEmail(email) {
		if (email.search(/[A-z_\-0-9]+@[A-z_\-0-9]+\.[A-z_\-0-9]+/) == -1)
			error = EMAIL_ERROR;
	}

	function validPassword(password) {
		if (password.length > 64 || password.length < 8 )
			error = PASSWORD_ERROR;
	}

	function passwordComparsion(pass1, pass2) {
		if (pass1 !== pass2)
			error = PASS_COMP_ERROR;
	}

	function errorShow(error) {
		$('.alert-danger').empty().append(error);
		$('.alert-danger').fadeIn();
	}

	function errorHide() {
		error = '';
		$('.alert-danger').fadeOut();
	}

	function ajaxRequest(url_arg, method_arg, data_arg, success_func){
		$.ajax({
			url: url_arg,
			method: method_arg,
			data: data_arg,
			cache: false
		}).done(function(result){
			var json = JSON.parse(result);
			if (json.error) errorShow(json.error);
			else success_func();
		});
	}

	$('#userdataChange').submit(function(){
		errorHide();

		var username	= $('#inputName').val();
			//email		= $('#inputEmail').val();

		if (default_username === username)
			return false;

		validUsername(username);

		var data_string = 'operation=userdataChange&username=' + username;

		if (error) errorShow(error);
 		else ajaxRequest('/profile', 'POST', data_string, function(){
 			swal({
				title: 'Your data has been successfully changed!',
				icon: "success"
			});
			default_username = username;
 		});

 		return false;
	});

	$('#passwordChange').submit(function(){
		errorHide();

		var pass1	= $('#inputPassword1').val(),
			pass2	= $('#inputPassword2').val(),
			pass3	= $('#inputPassword3').val();

		validPassword(pass1);
		validPassword(pass2);
		passwordComparsion(pass2, pass3);

		var data_string = 'operation=passwordChange&oldpassword=' + pass1 + '&password=' + pass2 + '&password_repeat=' + pass3;

		if (error) errorShow(error);
 		else ajaxRequest('/profile', 'POST', data_string, function(){
 			swal({
				title: 'Success',
				text: 'Password successfully changed!',
				icon: "success",
			});
 		});

 		return false;
	});

});

// FUCKING SHAME

$(document).ready(function(){

	// Navigation func
	function pageChange(h){
		$('.creation_menu a').removeClass('active');
		$('.creation_menu a[href="' + h + '"]').addClass('active');

		$('.quiz_creation_section').fadeOut(0);
		$(h + '_section' ).fadeIn(200);
	}


	var question_count = 0;
	$(document).on('click', '#add_question_btn', function(){
		addQusetion();
	});

	// Navigation between questions
	$(document).on('click', '.question', function(){
		questionsNav($(this).attr('href'));
		return false;
	});

	// Add new answer option
	$(document).on('click', '.add_answer', function(){
		addAnswer($(this).parent().parent().attr('id'));
	});

	$(document).on('click', '.remove_question_btn', function(){
		removeQuestion($(this).parent().attr('id'));
	});

	$(document).on('click', '.remove_answer', function() {
		$(this).parent().parent().remove();
	});

	$(document).on('click', '.page_change', function(){
		var h	= $(this).attr('href');
		pageChange(h);
	});


	// Functions to add questions and answers, navigation function

	function addQusetion() {
		if ($('.question').length == 10) swal("Oops!", "Maximum number of questions - 10!", "error");
		else{
			question_count++;
			$('.question').last().after('<a href="question_' + question_count + '" class="question list-group-item list-group-item-action">Question</a>');
			$('.question_setting').last().after('<div id="question_' + question_count + '" class="question_setting col-md-9"><p class="font-weight-bold d-inline-block">Question setting</p><button type="button" class="btn btn-danger remove_question_btn">Remove question</button><div class="form-group"><label>Question</label><input type="text" class="form-control question_name" placeholder="Enter a question" autocomplete="off"></div><div class="form-group"><label>Description for the question</label><input type="text" class="form-control question_descr" placeholder="Enter a description for the question" autocomplete="off"></div><div class="form-group"><label>How many answer choices can I choose?</label><select class="form-control answer_choices"><option value="One">One</option><option value="Several">Several</option></select></div><p class="font-weight-bold">Answer options</p><div class="answers_block"><div class="form-group answer"><input type="text" class="form-control" placeholder="Enter answer option" autocomplete="off"></div><div class="form-group answer"><input type="text" class="form-control" placeholder="Enter answer option" autocomplete="off"></div><div class="form-group row answer"><div class="col-sm-11"><input type="text" class="form-control" placeholder="Enter answer option" autocomplete="off"></div><div class="col-sm-1"><div class="remove_answer ml-auto"></div></div></div><button type="button" class="btn btn-outline-primary btn-block add_answer">Add answer option</button></div></div>');

			questionsNav('question_' + question_count);
		}
	}

	function questionsNav(ask_link) {
		$('.question_setting').fadeOut(0);
		$('#'+ask_link).fadeIn(100);
		$('.question').removeClass('active');
		$('.question_block a[href = ' + ask_link + ']').addClass('active');
	}

	function addAnswer(question_num) {
		$('#'+question_num+' .answer').last().after('<div class="form-group row answer"><div class="col-sm-11"><input type="text" class="form-control" placeholder="Enter answer option" autocomplete="off"></div><div class="col-sm-1"><div class="remove_answer ml-auto"></div></div></div>');
	}

	function removeQuestion(question_id){
		console.log(question_count);
		$('#' + question_id).remove();
		$('.question_block a[href='+ question_id +']').remove();
		questionsNav('question_0');
	}

	// Functions to add and remove questions and answers, navigation function END


	// Preview of question in question list
	$(document).on('keyup', '.question_name', function() {
		var question_id = $(this).parents('.question_setting').attr('id'),
			text = $(this).val(),
			sliced = text.slice(0,20);
		if (sliced.length < text.length) {
			sliced += '...';
		}
		if(text == '') sliced = 'Question';
		$('.question_block a[href = ' + question_id + ']').empty().text(sliced);
	});



	// Exit quiz func. Adding to draft
	$(document).on('click', '#exit_quiz_creation', function(){
		swal({
			title: 'Save quiz in draft?',
			icon: 'warning',
			dangerMode: true,
			buttons: {
		    cancel: true,
		    no: {
					text: 'Nope'
		    },
		    yes: {
					text: 'Yep'
				},
		  },
		})
		.then((value) => {
			if (value == 'no')
				window.location.replace('/quizzes');
			else if (value == 'yes'){
				if (nameAttrGen()){
					ajaxRequest('/quiz_creation', 'POST', getInputData(), function(){
							window.location.replace('/quizzes');
					});
				}
			}
		});
		return false;
	});


	function getInputData(){
		return {
			tuning_data: $('#tuning_form').serialize(),
			questions_data: $('#question_form').serialize(),
			contacts_data: $('#contacts_form').serialize()
		};
	}


	function nameAttrGen(){
		var i = 0, j, e = false;
		$('.question_setting').each(function(){
			j = 0;
			if ($('#question_' + i +' .question_name').val() == false){
				swal('You must fill in all the question!', '', "error");
				e = true;
			}

			$('#question_' + i + ' .question_name').attr('name', i + '_question_name');
			$('#question_' + i + ' .question_descr').attr('name', i + '_question_descr');
			$('#question_' + i + ' .answer_choices').attr('name', i + '_answer_choices');

			$('#question_' + i + ' .answer input').each(function(){
				if ($(this).val() == false){
					swal('You must fill in all answer fields!', '', "error");
					e = true;
				}
				$(this).attr('name', i + '_question-' + j + '_answer');
				j++;
			});
			i++;
		});
		if (e == true)
			return false;
		else return true;
	}


	$(document).on('click', '#generateQuiz', function(){
		var e = false;
		var inputData = ['#quizName', '#cb_header', '#recipient'];

		if (nameAttrGen() == false)
			return false;

		for (var i = 0; i < inputData.length; i++){
			if ($(inputData[i]).val() == false){
				swal('Please, fill in all required fields (quiz name, contact block header and recipient email)!', '', "error");
				e = true;
				return false;
			}
		}

		var c = 0;
		$('#contacts_form .custom-checkbox input').each(function(){
			if ($(this).prop('checked'))
				c++;
		});

		if (c < 2)
			swal('You must checked minimum two checkbox!', '', "error");

		if (!e && c >= 2){
			ajaxRequest('/quiz_creation', 'POST', getInputData(), function(){
				pageChange('#download');
			});
		}
	});
});
